---
import { Header, Hero, Projects, Footer } from '../components';
import { siteConfig, themeConfig } from '../config';
import "../styles/theme.css";
---
<!doctype html>
<html lang="zh-CN">
  <head>
    <meta charset="utf-8" />
    <title>{siteConfig.title}</title>
    <link rel="icon" type="image/svg+xml" href={siteConfig.icons.favicon} />
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap&text=ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789,.!?@#$%^&*()_+-=[]{}|;:'" rel="stylesheet">
    <!-- 更新图标字体引入 -->
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" rel="stylesheet">
    <script type="module">
      import '@material/web/button/filled-button.js';
      import '@material/web/button/outlined-button.js';
      import '@material/web/icon/icon.js';
      import '@material/web/divider/divider.js';

      // Typography 样式
      import { styles as typescaleStyles } from '@material/web/typography/md-typescale-styles.js';
      if ('adoptedStyleSheets' in Document.prototype) {
        document.adoptedStyleSheets = [...document.adoptedStyleSheets, typescaleStyles.styleSheet];
      } else {
        const s = document.createElement('style');
        s.textContent = typescaleStyles.cssText || '';
        document.head.appendChild(s);
      }
    </script>
    <script>
      // 主题初始化
      function initTheme() {
        const savedTheme = localStorage.getItem('theme');
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        
        if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
          document.documentElement.classList.add('dark');
        }
      }

      // 更新事件监听器，添加类型定义
      window.addEventListener('themeChanged', ((e: CustomEvent<{theme: string}>) => {
        localStorage.setItem('theme', e.detail.theme);
      }) as EventListener);

      // 在页面加载时初始化主题
      document.addEventListener('DOMContentLoaded', initTheme);
    </script>
    <style define:vars={{
      'theme-primary': themeConfig.colors.light.primary,
      'theme-primary-container': themeConfig.colors.light.primaryContainer,
      'theme-primary-dark': themeConfig.colors.dark.primary,
      'theme-primary-container-dark': themeConfig.colors.dark.primaryContainer,
    }}>
      /* 可以添加其他自定义样式 */
    </style>
  </head>
  <body>
    <Header client:load />
    <main class="container">
      <Hero client:load />
      <Projects client:load />
      <Footer client:load />
    </main>
  </body>
</html>
